{"version":3,"sources":["../../src/utils/websocket-manager.js"],"names":["path","require","store","fs","getCachedPageData","pagePath","directory","fixedPagePath","filePath","join","fileResult","readFileSync","JSON","parse","id","err","getCachedStaticQueryResults","resultsMap","cachedStaticQueryResults","Map","getState","staticQueryComponents","forEach","staticQueryComponent","has","hash","console","log","componentPath","jsonResult","set","getRoomNameFromPath","WebsocketManager","constructor","isInitialised","activePaths","Set","pageResults","staticQueryResults","errors","init","bind","getSocket","emitPageData","emitStaticQueryData","emitError","server","programDir","websocket","on","s","activePath","result","send","type","payload","message","errorID","leaveRoom","leave","leftRoom","sockets","adapter","rooms","length","delete","getDataForPath","why","get","add","data","manager","module","exports"],"mappings":"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","sourcesContent":["// @flow\n\nconst path = require(`path`)\nconst { store } = require(`../redux`)\nconst fs = require(`fs`)\n\ntype QueryResult = {\n  id: string,\n  result: object,\n}\n\ntype QueryResultsMap = Map<string, QueryResult>\n\n/**\n * Get cached page query result for given page path.\n * @param {string} pagePath Path to a page.\n * @param {string} directory Root directory of current project.\n */\nconst getCachedPageData = (\n  pagePath: string,\n  directory: string\n): QueryResult => {\n  const fixedPagePath = pagePath === `/` ? `index` : pagePath\n  const filePath = path.join(\n    directory,\n    `public`,\n    `page-data`,\n    fixedPagePath,\n    `page-data.json`\n  )\n  try {\n    const fileResult = fs.readFileSync(filePath, `utf-8`)\n    return {\n      ...JSON.parse(fileResult),\n      id: pagePath,\n    }\n  } catch (err) {\n    return null\n  }\n}\n\n/**\n * Get cached StaticQuery results for components that Gatsby didn't run query yet.\n * @param {QueryResultsMap} resultsMap Already stored results for queries that don't need to be read from files.\n * @param {string} directory Root directory of current project.\n */\nconst getCachedStaticQueryResults = (\n  resultsMap: QueryResultsMap,\n  directory: string\n): QueryResultsMap => {\n  const cachedStaticQueryResults = new Map()\n  const { staticQueryComponents } = store.getState()\n  staticQueryComponents.forEach(staticQueryComponent => {\n    // Don't read from file if results were already passed from query runner\n    if (resultsMap.has(staticQueryComponent.hash)) return\n\n    const filePath = path.join(\n      directory,\n      `public`,\n      `static`,\n      `d`,\n      `${staticQueryComponent.hash}.json`\n    )\n    const fileResult = fs.readFileSync(filePath, `utf-8`)\n    if (fileResult === `undefined`) {\n      console.log(\n        `Error loading a result for the StaticQuery in \"${\n          staticQueryComponent.componentPath\n        }\". Query was not run and no cached result was found.`\n      )\n      return\n    }\n    const jsonResult = JSON.parse(fileResult)\n    cachedStaticQueryResults.set(staticQueryComponent.hash, {\n      ...jsonResult,\n      id: staticQueryComponent.hash,\n    })\n  })\n  return cachedStaticQueryResults\n}\n\nconst getRoomNameFromPath = (path: string): string => `path-${path}`\n\nclass WebsocketManager {\n  pageResults: QueryResultsMap\n  staticQueryResults: QueryResultsMap\n  errors: Map<string, QueryResult>\n  isInitialised: boolean\n  activePaths: Set<string>\n  programDir: string\n\n  constructor() {\n    this.isInitialised = false\n    this.activePaths = new Set()\n    this.pageResults = new Map()\n    this.staticQueryResults = new Map()\n    this.errors = new Map()\n    // this.websocket\n    // this.programDir\n\n    this.init = this.init.bind(this)\n    this.getSocket = this.getSocket.bind(this)\n    this.emitPageData = this.emitPageData.bind(this)\n    this.emitStaticQueryData = this.emitStaticQueryData.bind(this)\n    this.emitError = this.emitError.bind(this)\n  }\n\n  init({ server, directory }) {\n    this.programDir = directory\n\n    const cachedStaticQueryResults = getCachedStaticQueryResults(\n      this.staticQueryResults,\n      this.programDir\n    )\n    this.staticQueryResults = new Map([\n      ...this.staticQueryResults,\n      ...cachedStaticQueryResults,\n    ])\n\n    this.websocket = require(`socket.io`)(server)\n\n    this.websocket.on(`connection`, s => {\n      let activePath = null\n      // Send already existing static query results\n      this.staticQueryResults.forEach(result => {\n        this.websocket.send({\n          type: `staticQueryResult`,\n          payload: result,\n        })\n      })\n      this.errors.forEach((message, errorID) => {\n        this.websocket.send({\n          type: `overlayError`,\n          payload: {\n            id: errorID,\n            message,\n          },\n        })\n      })\n\n      const leaveRoom = path => {\n        s.leave(getRoomNameFromPath(path))\n        const leftRoom = this.websocket.sockets.adapter.rooms[\n          getRoomNameFromPath(path)\n        ]\n        if (!leftRoom || leftRoom.length === 0) {\n          this.activePaths.delete(path)\n        }\n      }\n\n      const getDataForPath = path => {\n        if (!this.pageResults.has(path)) {\n          const result = getCachedPageData(path, this.programDir)\n          if (result) {\n            this.pageResults.set(path, result)\n          } else {\n            console.log(`Page not found`, path)\n            return\n          }\n        }\n\n        this.websocket.send({\n          type: `pageQueryResult`,\n          why: `getDataForPath`,\n          payload: this.pageResults.get(path),\n        })\n      }\n\n      s.on(`getDataForPath`, getDataForPath)\n\n      s.on(`registerPath`, path => {\n        s.join(getRoomNameFromPath(path))\n        activePath = path\n        this.activePaths.add(path)\n      })\n\n      s.on(`disconnect`, s => {\n        leaveRoom(activePath)\n      })\n\n      s.on(`unregisterPath`, path => {\n        leaveRoom(path)\n      })\n    })\n\n    this.isInitialised = true\n  }\n\n  getSocket() {\n    return this.isInitialised && this.websocket\n  }\n\n  emitStaticQueryData(data: QueryResult) {\n    this.staticQueryResults.set(data.id, data)\n    if (this.isInitialised) {\n      this.websocket.send({ type: `staticQueryResult`, payload: data })\n    }\n  }\n\n  emitPageData(data: QueryResult) {\n    this.pageResults.set(data.id, data)\n    if (this.isInitialised) {\n      this.websocket.send({ type: `pageQueryResult`, payload: data })\n    }\n  }\n  emitError(id: string, message?: string) {\n    if (message) {\n      this.errors.set(id, message)\n    } else {\n      this.errors.delete(id)\n    }\n\n    if (this.isInitialised) {\n      this.websocket.send({ type: `overlayError`, payload: { id, message } })\n    }\n  }\n}\n\nconst manager = new WebsocketManager()\n\nmodule.exports = manager\n"],"file":"websocket-manager.js"}