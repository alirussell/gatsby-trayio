{"version":3,"sources":["../../src/utils/page-data.js"],"names":["fs","require","path","Queue","getFilePath","publicDir","pagePath","fixedPagePath","join","write","page","result","webpackCompilationHash","filePath","body","componentChunkName","compilationHash","outputFile","JSON","stringify","read","rawPageData","readFile","parse","updateCompilationHash","pageData","rewriteCompilationHashes","pagePaths","length","Promise","resolve","queueOptions","concurrent","handler","callback","q","drainPromise","once","forEach","push","module","exports"],"mappings":"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","sourcesContent":["const fs = require(`fs-extra`)\nconst path = require(`path`)\nconst Queue = require(`better-queue`)\n\nconst getFilePath = ({ publicDir }, pagePath) => {\n  const fixedPagePath = pagePath === `/` ? `index` : pagePath\n  return path.join(publicDir, `page-data`, fixedPagePath, `page-data.json`)\n}\n\nconst write = async ({ publicDir }, page, result, webpackCompilationHash) => {\n  const filePath = getFilePath({ publicDir }, page.path)\n  const body = {\n    componentChunkName: page.componentChunkName,\n    path: page.path,\n    compilationHash: webpackCompilationHash,\n    ...result,\n  }\n  await fs.outputFile(filePath, JSON.stringify(body))\n}\n\nconst read = async ({ publicDir }, pagePath) => {\n  const filePath = getFilePath({ publicDir }, pagePath)\n  const rawPageData = await fs.readFile(filePath)\n  return JSON.parse(rawPageData)\n}\n\nconst updateCompilationHash = async (\n  { publicDir },\n  pagePath,\n  webpackCompilationHash\n) => {\n  const filePath = getFilePath({ publicDir }, pagePath)\n  const pageData = await read({ publicDir }, pagePath)\n  pageData.compilationHash = webpackCompilationHash\n  await fs.outputFile(filePath, JSON.stringify(pageData))\n}\n\n// TODO We should move this to a worker model (like html page\n// rendering) for performance\nconst rewriteCompilationHashes = (\n  { publicDir },\n  pagePaths,\n  compilationHash\n) => {\n  if (pagePaths.length === 0) {\n    return Promise.resolve()\n  }\n  const queueOptions = {\n    concurrent: 4,\n  }\n  const handler = async (pagePath, callback) => {\n    await updateCompilationHash({ publicDir }, pagePath, compilationHash)\n    callback(null)\n  }\n  const q = new Queue(handler, queueOptions)\n  const drainPromise = new Promise(resolve => {\n    q.once(`drain`, () => resolve())\n  })\n  pagePaths.forEach(pagePath => q.push(pagePath))\n  return drainPromise\n}\n\nmodule.exports = {\n  write,\n  read,\n  updateCompilationHash,\n  rewriteCompilationHashes,\n}\n"],"file":"page-data.js"}