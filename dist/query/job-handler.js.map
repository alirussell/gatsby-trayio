{"version":3,"sources":["../../src/query/job-handler.js"],"names":["fs","require","path","report","boundActionCreators","store","withResolverContext","formatErrorDetails","pageDataUtil","resultHashes","jobHandler","queryJob","getState","schema","program","pages","webpackCompilationHash","graphql","query","context","result","errors","errorDetails","Map","set","isPage","JSON","stringify","pluginCreatorId","panicOnBuild","componentPath","Object","assign","pageContext","internalComponentName","component","componentChunkName","updatedAt","pluginCreator___NODE","resultJSON","resultHash","createHash","update","digest","id","publicDir","join","directory","page","get","write","staticDir","resultPath","hash","outputFile","pageQueryRun","module","exports"],"mappings":"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","sourcesContent":["// @flow\n\nimport { graphql as graphqlFunction } from \"graphql\"\nconst fs = require(`fs-extra`)\nconst path = require(`path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst { boundActionCreators } = require(`../redux/actions`)\nconst { store } = require(`../redux`)\nconst withResolverContext = require(`../schema/context`)\nconst { formatErrorDetails } = require(`./utils`)\nconst pageDataUtil = require(`../utils/page-data`)\n\nconst resultHashes = {}\n\nconst jobHandler = async ({ queryJob }) => {\n  const { schema, program, pages, webpackCompilationHash } = store.getState()\n\n  const graphql = (query, context) =>\n    graphqlFunction(\n      schema,\n      query,\n      context,\n      withResolverContext(context, schema),\n      context\n    )\n\n  // Run query\n  let result\n  // Nothing to do if the query doesn't exist.\n  if (!queryJob.query || queryJob.query === ``) {\n    result = {}\n  } else {\n    result = await graphql(queryJob.query, queryJob.context)\n  }\n\n  // If there's a graphql error then log the error. If we're building, also\n  // quit.\n  if (result && result.errors) {\n    const errorDetails = new Map()\n    errorDetails.set(`Errors`, result.errors || [])\n    if (queryJob.isPage) {\n      errorDetails.set(`URL path`, queryJob.context.path)\n      errorDetails.set(\n        `Context`,\n        JSON.stringify(queryJob.context.context, null, 2)\n      )\n    }\n    errorDetails.set(`Plugin`, queryJob.pluginCreatorId || `none`)\n    errorDetails.set(`Query`, queryJob.query)\n\n    report.panicOnBuild(`\nThe GraphQL query from ${queryJob.componentPath} failed.\n\n${formatErrorDetails(errorDetails)}`)\n  }\n\n  // Add the page context onto the results.\n  if (queryJob && queryJob.isPage) {\n    result[`pageContext`] = Object.assign({}, queryJob.context)\n  }\n\n  // Delete internal data from pageContext\n  if (result.pageContext) {\n    delete result.pageContext.path\n    delete result.pageContext.internalComponentName\n    delete result.pageContext.component\n    delete result.pageContext.componentChunkName\n    delete result.pageContext.updatedAt\n    delete result.pageContext.pluginCreator___NODE\n    delete result.pageContext.pluginCreatorId\n    delete result.pageContext.componentPath\n    delete result.pageContext.context\n  }\n\n  const resultJSON = JSON.stringify(result)\n  const resultHash = require(`crypto`)\n    .createHash(`sha1`)\n    .update(resultJSON)\n    .digest(`base64`)\n\n  if (resultHashes[queryJob.id] !== resultHash) {\n    resultHashes[queryJob.id] = resultHash\n\n    const publicDir = path.join(program.directory, `public`)\n    if (queryJob.isPage) {\n      const page = pages.get(queryJob.id)\n      await pageDataUtil.write(\n        { publicDir },\n        page,\n        result,\n        webpackCompilationHash\n      )\n    } else {\n      const staticDir = path.join(publicDir, `static`)\n      const resultPath = path.join(staticDir, `d`, `${queryJob.hash}.json`)\n      await fs.outputFile(resultPath, resultJSON)\n    }\n  }\n\n  // Send event that the page query finished.\n  boundActionCreators.pageQueryRun({\n    path: queryJob.id,\n    componentPath: queryJob.componentPath,\n    isPage: queryJob.isPage,\n  })\n\n  return result\n}\n\nmodule.exports = jobHandler\n"],"file":"job-handler.js"}