{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","glob","fs","openurl","chokidar","express","graphqlHTTP","graphqlPlayground","default","formatError","request","rl","webpack","webpackConfig","bootstrap","store","emitter","syncStaticDir","buildHTML","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","withResolverContext","sourceNodes","websocketManager","getSslCert","slash","initTracer","apiRunnerNode","telemetry","queryRunner","queryWatcher","writeJsRequires","db","detectPortInUseAndPrompt","onExit","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","startQueryListener","processing","Set","waiting","Map","betterQueueOptions","priority","job","cb","activePaths","Array","from","values","id","includes","merge","oldTask","newTask","filter","has","set","postHandler","queryJob","result","isPage","emitPageData","emitStaticQueryData","delete","queue","push","get","createQueue","startListener","runPageQueries","queryIds","activity","activityTimer","start","processPageQueries","end","boundActionCreators","setProgramStatus","waitJobsFinished","Promise","resolve","reject","onEndJob","getState","jobs","active","length","off","trackCli","startServer","program","directory","directoryPath","createIndexHtml","buildRenderer","buildPages","pagePaths","err","name","panic","stripIndent","devConfig","port","compiler","app","use","expressMiddleware","log","path","heartbeat","env","GATSBY_GRAPHQL_IDE","endpoint","schema","graphiql","context","stack","split","mapToObject","map","obj","key","value","req","res","json","pages","next","header","post","enableRefresh","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","authorizedRefresh","headers","authorization","console","query","fileName","lineNumber","index","logLevel","publicPath","stats","developMiddleware","config","proxy","prefix","proxiedUrl","originalUrl","pipe","message","error","status","sendFile","server","Server","ssl","createServer","init","socket","getSocket","listener","listen","host","code","watchGlobs","watch","to","emit","module","exports","openTracingConfigFile","startBackgroundUpdate","parseInt","https","sitePackageJson","replace","certFile","keyFile","newPort","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","cyan","printDeprecationWarnings","deprecatedApis","fixMap","newName","docsLink","pathContext","deprecatedLocations","forEach","api","sync","nodir","file","fileText","readFileSync","matchingApis","indexOf","yellow","graphqlRunner","calcBootstrapDirtyQueryIds","groupQueryIds","staticQueryIds","pageQueryIds","processStaticQueries","startPageListener","saveState","startAutosave","startWatchDeletePage","isFirstCompile","hooks","done","tapAsync","messages","toJson","isSuccessful","errors","open","catch"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\nconst openurl = require(`better-opn`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst graphqlPlayground = require(`graphql-playground-middleware-express`)\n  .default\nconst { formatError } = require(`graphql`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store, emitter } = require(`../redux`)\nconst { syncStaticDir } = require(`../utils/get-static-dir`)\nconst buildHTML = require(`./build-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\nconst withResolverContext = require(`../schema/context`)\nconst sourceNodes = require(`../utils/source-nodes`)\nconst websocketManager = require(`../utils/websocket-manager`)\nconst getSslCert = require(`../utils/get-ssl-cert`)\nconst slash = require(`slash`)\nconst { initTracer } = require(`../utils/tracer`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst telemetry = require(`gatsby-telemetry`)\nconst queryRunner = require(`../query`)\nconst queryWatcher = require(`../query/query-watcher`)\nconst writeJsRequires = require(`../bootstrap/write-js-requires`)\nconst db = require(`../db`)\nconst detectPortInUseAndPrompt = require(`../utils/detect-port-in-use-and-prompt`)\nconst onExit = require(`signal-exit`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfere with the regular\n// bootstrap.\nsetTimeout(() => {\n  syncStaticDir()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nfunction startQueryListener() {\n  const processing = new Set()\n  const waiting = new Map()\n\n  const betterQueueOptions = {\n    priority: (job, cb) => {\n      const activePaths = Array.from(websocketManager.activePaths.values())\n      if (job.id && activePaths.includes(job.id)) {\n        cb(null, 10)\n      } else {\n        cb(null, 1)\n      }\n    },\n    merge: (oldTask, newTask, cb) => {\n      cb(null, newTask)\n    },\n    filter: (job, cb) => {\n      if (processing.has(job.id)) {\n        waiting.set(job.id, job)\n        cb(`already running`)\n      } else {\n        cb(null, job)\n      }\n    },\n  }\n\n  const postHandler = async ({ queryJob, result }) => {\n    if (queryJob.isPage) {\n      websocketManager.emitPageData({\n        ...result,\n        id: queryJob.id,\n      })\n    } else {\n      websocketManager.emitStaticQueryData({\n        ...result,\n        id: queryJob.id,\n      })\n    }\n    processing.delete(queryJob.id)\n    if (waiting.has(queryJob.id)) {\n      queue.push(waiting.get(queryJob.id))\n      waiting.delete(queryJob.id)\n    }\n  }\n\n  const queue = queryRunner.createQueue({ postHandler, betterQueueOptions })\n  queryRunner.startListener(queue)\n}\n\nconst runPageQueries = async queryIds => {\n  let activity = report.activityTimer(`run page queries`)\n  activity.start()\n  await queryRunner.processPageQueries(queryIds, { activity })\n  activity.end()\n\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_QUERY_RUNNING_FINISHED`\n  )\n}\n\nconst waitJobsFinished = () =>\n  new Promise((resolve, reject) => {\n    const onEndJob = () => {\n      if (store.getState().jobs.active.length === 0) {\n        resolve()\n        emitter.off(`END_JOB`, onEndJob)\n      }\n    }\n    emitter.on(`END_JOB`, onEndJob)\n    onEndJob()\n  })\n\nonExit(() => {\n  telemetry.trackCli(`DEVELOP_STOP`)\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = async () => {\n    try {\n      await buildHTML.buildRenderer(program, `develop-html`)\n      await buildHTML.buildPages({ program, pagePaths: [`/`] })\n    } catch (err) {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://gatsby.dev/debug-html\n        `,\n        err\n      )\n    }\n  }\n\n  await createIndexHtml()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(telemetry.expressMiddleware(`DEVELOP`))\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n\n  if (process.env.GATSBY_GRAPHQL_IDE === `playground`) {\n    app.get(\n      `/___graphql`,\n      graphqlPlayground({\n        endpoint: `/___graphql`,\n      }),\n      () => {}\n    )\n  }\n\n  app.use(\n    `/___graphql`,\n    graphqlHTTP(() => {\n      const schema = store.getState().schema\n      return {\n        schema,\n        graphiql:\n          process.env.GATSBY_GRAPHQL_IDE === `playground` ? false : true,\n        context: withResolverContext({}, schema),\n        formatError(err) {\n          return {\n            ...formatError(err),\n            stack: err.stack ? err.stack.split(`\\n`) : [],\n          }\n        },\n      }\n    })\n  )\n\n  const mapToObject = map => {\n    const obj = {}\n    for (let [key, value] of map) {\n      obj[key] = value\n    }\n    return obj\n  }\n\n  app.get(`/___pages`, (req, res) => {\n    res.json(mapToObject(store.getState().pages))\n  })\n\n  // Allow requests from any origin. Avoids CORS issues when using the `--host` flag.\n  app.use((req, res, next) => {\n    res.header(`Access-Control-Allow-Origin`, `*`)\n    res.header(\n      `Access-Control-Allow-Headers`,\n      `Origin, X-Requested-With, Content-Type, Accept`\n    )\n    next()\n  })\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  app.post(`/__refresh`, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      console.log(`Refreshing source data`)\n      sourceNodes()\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  // Disable directory indexing i.e. serving index.html from a directory.\n  // This can lead to serving stale html files during development.\n  //\n  // We serve by default an empty index.html that sets up the dev environment.\n  app.use(require(`./develop-static`)(`public`, { index: false }))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      logLevel: `trace`,\n      publicPath: devConfig.output.publicPath,\n      stats: `errors-only`,\n    })\n  )\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req\n        .pipe(\n          request(proxiedUrl).on(`error`, err => {\n            const message = `Error when trying to proxy request \"${\n              req.originalUrl\n            }\" to \"${proxiedUrl}\"`\n\n            report.error(message, err)\n            res.status(500).end()\n          })\n        )\n        .pipe(res)\n    })\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    res.sendFile(directoryPath(`public/index.html`), err => {\n      if (err) {\n        res.status(500).end()\n      }\n    })\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  let server = require(`http`).Server(app)\n\n  // If a SSL cert exists in program, use it with `createServer`.\n  if (program.ssl) {\n    server = require(`https`).createServer(program.ssl, app)\n  }\n  websocketManager.init({ server, directory: program.directory })\n  const socket = websocketManager.getSocket()\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listening on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    slash(directoryPath(path))\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    socket.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  initTracer(program.openTracingConfigFile)\n  telemetry.trackCli(`DEVELOP_START`)\n  telemetry.startBackgroundUpdate()\n\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    report.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named after `name` inside the project's package.json.\n  // Scoped names are converted from @npm/package-name to npm--package-name\n  if (program.https) {\n    program.ssl = await getSslCert({\n      name: program.sitePackageJson.name.replace(`@`, ``).replace(`/`, `--`),\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n  }\n\n  program.port = await new Promise(resolve => {\n    detectPortInUseAndPrompt(port, rlInterface, newPort => {\n      resolve(newPort)\n    })\n  })\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(\n      `View ${\n        process.env.GATSBY_GRAPHQL_IDE === `playground`\n          ? `the GraphQL Playground`\n          : `GraphiQL`\n      }, an in-browser IDE, to explore your site's data and schema`\n    )\n    console.log()\n    console.log(`  ${urls.localUrlForTerminal}___graphql`)\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`npm run build`)}`\n    )\n    console.log()\n  }\n\n  function printDeprecationWarnings() {\n    const deprecatedApis = [`boundActionCreators`, `pathContext`]\n    const fixMap = {\n      boundActionCreators: {\n        newName: `actions`,\n        docsLink: `https://gatsby.dev/boundActionCreators`,\n      },\n      pathContext: {\n        newName: `pageContext`,\n        docsLink: `https://gatsby.dev/pathContext`,\n      },\n    }\n    const deprecatedLocations = {}\n    deprecatedApis.forEach(api => (deprecatedLocations[api] = []))\n\n    glob\n      .sync(`{,!(node_modules|public)/**/}*.js`, { nodir: true })\n      .forEach(file => {\n        const fileText = fs.readFileSync(file)\n        const matchingApis = deprecatedApis.filter(\n          api => fileText.indexOf(api) !== -1\n        )\n        matchingApis.forEach(api => deprecatedLocations[api].push(file))\n      })\n\n    deprecatedApis.forEach(api => {\n      if (deprecatedLocations[api].length) {\n        console.log(\n          `%s %s %s %s`,\n          chalk.cyan(api),\n          chalk.yellow(`is deprecated. Please use`),\n          chalk.cyan(fixMap[api].newName),\n          chalk.yellow(\n            `instead. For migration instructions, see ${\n              fixMap[api].docsLink\n            }\\nCheck the following files:`\n          )\n        )\n        console.log()\n        deprecatedLocations[api].forEach(file => console.log(file))\n        console.log()\n      }\n    })\n  }\n\n  // Start bootstrap process.\n  const { graphqlRunner } = await bootstrap(program)\n\n  // Start the createPages hot reloader.\n  require(`../bootstrap/page-hot-reloader`)(graphqlRunner)\n\n  const queryIds = queryRunner.calcBootstrapDirtyQueryIds(store.getState())\n  const { staticQueryIds, pageQueryIds } = queryRunner.groupQueryIds(queryIds)\n  let activity = report.activityTimer(`run static queries`)\n  activity.start()\n  await queryRunner.processStaticQueries(staticQueryIds, { activity })\n  activity.end()\n\n  await runPageQueries(pageQueryIds)\n  await waitJobsFinished()\n  await writeJsRequires.startPageListener()\n  await db.saveState()\n  db.startAutosave()\n  startQueryListener()\n  queryWatcher.startWatchDeletePage()\n\n  const [compiler] = await startServer(program)\n\n  let isFirstCompile = true\n\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tapAsync(`print getsby instructions`, (stats, done) => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(\n      program.ssl ? `https` : `http`,\n      program.host,\n      program.port\n    )\n    const isSuccessful = !messages.errors.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n      printDeprecationWarnings()\n      if (program.open) {\n        Promise.resolve(openurl(urls.localUrlForBrowser)).catch(err =>\n          console.log(\n            `${chalk.yellow(\n              `warn`\n            )} Browser not opened because no browser was found`\n          )\n        )\n      }\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n\n    done()\n  })\n}\n"],"file":"develop.js"}